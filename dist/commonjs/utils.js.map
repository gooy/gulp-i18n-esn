{"version":3,"sources":["utils.js"],"names":[],"mappings":";;;;;QAMgB,YAAY,GAAZ,YAAY;QAsBZ,cAAc,GAAd,cAAc;;AAtBvB,SAAS,YAAY,CAAC,IAAI,EAAC;AAChC,SAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAC/C;;AAoBM,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAC;AAC1D,WAAS,GAAG,SAAS,IAAI,GAAG,CAAC;;AAE7B,MAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC;AAC9D,QAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;GACzC;;AAED,MAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAClC,MAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;AACrB,MAAI,GAAG,GAAG,GAAG,CAAC;;AAEd,OAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;AACnC,QAAG,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;AACxB,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;KACvB,MAAK,IAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;AACtB,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;KACpB;AACD,OAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;GACrB;AACD,SAAO,GAAG,CAAC;CACZ","file":"utils.js","sourceRoot":"/source/","sourcesContent":["/**\n * Get the file extension from a filepath.\n *\n * @param path        path to analyze\n * @returns {string}  the extracted file extension\n */\nexport function getExtension(path){\n  return path.substr(path.lastIndexOf('.') + 1);\n}\n\n/**\n * Create a hash from a translation key.\n *\n * converts 'foo.bar.baz' to:\n *\n * foo:{\n *   bar: {\n *     baz: {\n *     }\n *   }\n * }\n *\n * @param path\n * @param value\n * @param separator\n * @param hash\n * @returns {*|{}}\n */\nexport function hashFromString(path, value, separator, hash){\n  separator = separator || '.';\n\n  if(path.indexOf(separator, path.length - separator.length) >= 0){\n    path = path.slice(0, -separator.length);\n  }\n\n  let parts = path.split(separator);\n  let tmp = hash || {};\n  let obj = tmp;\n\n  for(let x = 0; x < parts.length; x++){\n    if(x === parts.length - 1){\n      tmp[parts[x]] = value;\n    }else if(!tmp[parts[x]]){\n      tmp[parts[x]] = {};\n    }\n    tmp = tmp[parts[x]];\n  }\n  return obj;\n}\n"]}